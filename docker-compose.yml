services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: mgnrega_db
      POSTGRES_USER: mgnrega_user
      POSTGRES_PASSWORD: mgnrega_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mgnrega_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://mgnrega_user:mgnrega_pass@postgres:5432/mgnrega_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-secret-key-change-in-production
      DATA_GOV_API_KEY: your-api-key
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://mgnrega_user:mgnrega_pass@postgres:5432/mgnrega_db
      REDIS_URL: redis://redis:6379
      DATA_GOV_API_KEY: your-api-key
      POLL_INTERVAL_HOURS: 24
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./worker:/app
      - /app/node_modules
    command: npm start

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
